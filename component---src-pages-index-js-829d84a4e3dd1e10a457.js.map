{"version":3,"sources":["webpack:///./src/components/Key/Label.js","webpack:///./src/components/Key/index.js","webpack:///./src/components/Keyboard/keyboard.js","webpack:///./src/components/Keyboard/index.js","webpack:///./src/components/Keyboard/Actions.js","webpack:///./src/components/Keyboard/Layout.js","webpack:///./src/components/Dialog/Dialog.js","webpack:///./src/components/Dialog/index.js","webpack:///./src/components/EditForm/EditForm.js","webpack:///./src/components/EditForm/index.js","webpack:///./src/components/ExportDialog/ExportDialog.js","webpack:///./src/components/ExportDialog/index.js","webpack:///./src/components/Tabs/Tabs.js","webpack:///./src/components/Tabs/index.js","webpack:///./src/components/ImportDialog/ImportDialog.js","webpack:///./src/components/ImportDialog/index.js","webpack:///./src/pages/index.js"],"names":["fontSize","css","_ref","label","length","LabelEntry","styled","div","withConfig","displayName","componentId","Label","_ref2","labels","map","idx","labelRender","glyph","react_default","a","createElement","className","src","key","Base","Cap","Key","width","height","column","row","verticalSpan","lift","id","onClick","style","left","top","Array","isArray","_","Key_Label","propTypes","PropTypes","string","func","isRequired","defaultProps","memo","KeyboardSection","KeyboardTable","Layout","keyMapping","0","1","props","components_Key","Object","assign","2","3","Keyboard","onKeySelect","layout","split","keysData","rows","rowsPerSide","rowLn","rower","maxRows","keyType","makeRow","rowsElements","keys","hands","slice","hand","side","bool","arrayOf","array","Actions","actions","classes","root","action","method","shape","withStyles","theme","display","flexDirection","alignItems","Wrapper","Top","Body","Bottom","children","bottom","node","BasicDialog","render","_this$props","this","open","onClose","text","onEntered","title","Dialog_default","aria-labelledby","paper","DialogTitle_default","DialogContent_default","DialogContent","DialogContentText_default","DialogActions_default","PureComponent","onOpen","Dialog","maxWidth","minWidth","overflowY","EditForm","keyCodes","formatLabel","params","value","os","code","command","makeFormatLabel","isComplexKey","_ref3","_isComplexKey","_PureComponent","_this","call","state","onParamsChange","bind","assertThisInitialized_default","onsSubmit","onChange","inheritsLoose_default","_proto","prototype","resetState","setState","_this$state","info","keyOptions","modifierOptions","components_Dialog","Button_default","color","react_select_esm","options","autoFocus","object","ExportDialog","snackOpen","snackMessage","textArea","React","createRef","onSnackClose","onEnter","current","focus","select","document","execCommand","err","console","error","onCopySuccess","openSnack","message","close","codeWrapper","ref","readOnly","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","_len2","arguments","args","_key2","log","minHeight","backgroundColor","position","border","borderRadius","padding","handleChange","cb","event","ScrollableTabs","tabs","onAdd","AppBar_default","header","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","tab","Tab_default","IconButton_default","menuButton","aria-label","add_default","number","Tabs","palette","background","flexGrow","Import","onSubmit","target","TextField_default","multiline","fullWidth","margin","variant","ImportDialog","editKey","makeTabs","tabsCount","push","reverse","KeyboardPage","_Component","apply","exportLayout","editing","editingId","exportIsOpen","exportClose","importLayout","exported","activeLayer","selectLayer","createLayer","importDialogOpen","ui","setKey","react","Helmet_default","name","content","lang","Keyboard_Layout","components_Tabs","Keyboard_Actions","openImport","components_Keyboard","description","pages_EditForm","selectKeyOptions","selectModifierOptions","components_ExportDialog","components_ImportDialog","closeImport","Component","prop","KeyboardPageConnected","connect","keyboard","layersCount","dispatch","bindActionCreators","keyboardActions","uiActions","__webpack_exports__"],"mappings":"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","file":"component---src-pages-index-js-829d84a4e3dd1e10a457.js","sourcesContent":["import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst fontSize = css`\r\n  ${({ label }) => {\r\n    if (label.length === 1) return \"125%\";\r\n    if (label.length > 5) return \"65%\";\r\n    return \"85%\";\r\n  }};\r\n`;\r\n\r\nconst LabelEntry = styled.div`\r\n  font-size: ${fontSize};\r\n  word-break: break-word;\r\n  &:nth-child(2) {\r\n    margin-top: 2px;\r\n  }\r\n`;\r\n\r\nfunction Label({ labels }) {\r\n  return labels.map((label, idx) => {\r\n    const labelRender =\r\n      label.glyph === true ? <span className={`icon-${label.src}`} /> : label;\r\n    return (\r\n      // eslint-disable-next-line react/no-array-index-key\r\n      <LabelEntry key={idx} label={label}>\r\n        {labelRender}\r\n      </LabelEntry>\r\n    );\r\n  });\r\n}\r\n\r\nexport default Label;\r\n","import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Label from \"./Label\";\r\n\r\nconst Base = styled.div`\r\n  position: absolute;\r\n  border: 1px solid rgb(199, 199, 199);\r\n  padding: 0;\r\n  margin: 0;\r\n  text-align: center;\r\n  background-color: rgb(244, 244, 244);\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst Cap = styled.div`\r\n  background-color: white;\r\n  border-radius: 3px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  width: 90%;\r\n  height: 80%;\r\n  margin: 5% 5% 15%;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction Key({\r\n  width,\r\n  height,\r\n  label,\r\n  column,\r\n  row,\r\n  verticalSpan,\r\n  lift,\r\n  id,\r\n  onClick\r\n}) {\r\n  const style = {\r\n    width: `${width}%`,\r\n    height: `${height * verticalSpan}%`,\r\n    left: `${width * column}%`,\r\n    top: `${height * (row - lift)}%`\r\n  };\r\n  const labels = Array.isArray(label) ? label : [label];\r\n  return (\r\n    <Base {...{ style }}>\r\n      <Cap onClick={_ => onClick({ id })}>\r\n        {label && <Label labels={labels} />}\r\n      </Cap>\r\n    </Base>\r\n  );\r\n}\r\n\r\nKey.propTypes = {\r\n  label: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired\r\n};\r\n\r\nKey.defaultProps = {\r\n  lift: 0\r\n};\r\n\r\nexport default memo(Key);\r\n","import React from \"react\";\r\nimport Key from \"../Key\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst KeyboardSection = styled.div`\r\n  position: relative;\r\n  margin: 0 5%;\r\n  flex-grow: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst KeyboardTable = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nconst Layout = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 30px;\r\n`;\r\n\r\nconst keyMapping = {\r\n  0: () => null,\r\n  1: props => <Key {...props} verticalSpan={1} />,\r\n  2: props => <Key {...props} verticalSpan={2} />,\r\n  3: props => <Key {...props} verticalSpan={2} lift={1} />\r\n};\r\n\r\nconst makeRow = onClick => keysData => height => width => (\r\n  rowLn,\r\n  maxRows\r\n) => row => (keyType, idx) => {\r\n  const id = idx + row * rowLn;\r\n  return keyMapping[keyType]({\r\n    width,\r\n    height,\r\n    onClick,\r\n    row: row % maxRows,\r\n    column: idx,\r\n    key: `${row}x${idx}`,\r\n    id,\r\n    label: (keysData[id] || {}).label || \"\"\r\n  });\r\n};\r\n\r\n// generate rows with\r\nconst Keyboard = ({ onKeySelect, layout, split, keysData }) => {\r\n  const rows = layout.length;\r\n  const rowsPerSide = rows / 2; // Just in case of split keyboard\r\n  const rowLn = layout[0].length; // Fixed to first row width\r\n  const height = split ? 100 / (rows / 2) : 100 / rows;\r\n  const width = 100 / rowLn;\r\n  const rower = makeRow(onKeySelect)(keysData)(height)(width)(\r\n    rowLn,\r\n    rowsPerSide\r\n  );\r\n  const rowsElements = layout.map((keys, row) => keys.map(rower(row)));\r\n  const hands = split\r\n    ? [rowsElements.slice(0, rowsPerSide), rowsElements.slice(rowsPerSide)]\r\n    : rowsElements;\r\n  return (\r\n    <Layout>\r\n      <KeyboardTable>\r\n        {hands.map((hand, side) => (\r\n          <KeyboardSection key={`hand ${side}`}>{hand}</KeyboardSection>\r\n        ))}\r\n      </KeyboardTable>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nKeyboard.propTypes = {\r\n  split: PropTypes.bool,\r\n  layout: PropTypes.arrayOf(PropTypes.array)\r\n};\r\n\r\nexport default Keyboard;\r\n","import Keyboard from \"./keyboard\";\nexport default Keyboard;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  }\r\n});\r\n\r\nconst Actions = ({ actions, classes }) => {\r\n  return (\r\n    <div className={classes.root}>\r\n      {actions.map((action, idx) => (\r\n        <button key={idx} onClick={action.method}>\r\n          {action.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nActions.propTypes = {\r\n  actions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      method: PropTypes.func,\r\n      label: PropTypes.string\r\n    })\r\n  )\r\n};\r\n\r\nActions.defaultProps = {\r\n  actions: []\r\n};\r\n\r\nexport default withStyles(styles)(Actions);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nconst Top = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  margin: 0;\r\n`;\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  height: 70%;\r\n  margin: 0;\r\n  max-width: 1160px;\r\n  margin: 0 auto;\r\n  padding: 0 15px;\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n  width: 100%;\r\n  height: 25%;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nfunction Layout(props) {\r\n  return (\r\n    <Wrapper>\r\n      <Top>{props.top}</Top>\r\n      <Body>{props.children}</Body>\r\n      <Bottom>{props.bottom}</Bottom>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nLayout.propTypes = {\r\n  top: PropTypes.node,\r\n  bottom: PropTypes.node\r\n};\r\n\r\nLayout.defaultProps = {\r\n  classes: []\r\n};\r\n\r\nexport default Layout;\r\n","import React, { PureComponent } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  paper: {\r\n    maxWidth: \"70%\"\r\n  },\r\n  DialogContent: {\r\n    width: \"100%\"\r\n  }\r\n};\r\n\r\nclass BasicDialog extends PureComponent {\r\n  static defaultProps = {\r\n    open: false,\r\n    text: null,\r\n    title: null,\r\n    actions: null\r\n  };\r\n\r\n  static propTypes = {\r\n    open: PropTypes.bool,\r\n    text: PropTypes.string,\r\n    title: PropTypes.string,\r\n    actions: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    onOpen: PropTypes.func,\r\n    onEntered: PropTypes.func\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      open,\r\n      onClose,\r\n      classes,\r\n      text,\r\n      onEntered,\r\n      title,\r\n      actions,\r\n      children\r\n    } = this.props;\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        onClose={onClose}\r\n        onEntered={onEntered}\r\n        aria-labelledby=\"edit-key\"\r\n        classes={{ paper: classes.paper }}\r\n      >\r\n        {title && <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>}\r\n        <DialogContent classes={{ root: classes.DialogContent }}>\r\n          {text && <DialogContentText>{text}</DialogContentText>}\r\n          {children}\r\n        </DialogContent>\r\n        {actions && <DialogActions>{actions}</DialogActions>}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(BasicDialog);\r\n","import Dialog from \"./Dialog\";\r\nexport default Dialog;\r\n","import React, { PureComponent } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// import Dialog from \"@material-ui/core/Dialog\";\r\n// import DialogActions from \"@material-ui/core/DialogActions\";\r\n// import DialogContent from \"@material-ui/core/DialogContent\";\r\n// import DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport Dialog from \"../Dialog\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  paper: {\r\n    minWidth: \"30%\",\r\n    overflowY: \"visible\"\r\n  },\r\n  DialogContent: {\r\n    overflowY: \"visible\"\r\n  }\r\n};\r\n\r\nconst style = withStyles(styles);\r\n\r\n/**\r\n *\r\n * @param {Object} KeyInfo\r\n * @param {Object} SelectedKey\r\n *\r\n */\r\nconst makeFormatLabel = keyCodes => ({ value, os }, params = {}) => {\r\n  const { label } = keyCodes[value] || {};\r\n  return typeof label === \"function\"\r\n    ? label({\r\n        code: value,\r\n        command: params.value,\r\n        os: os || params.os\r\n      })\r\n    : label;\r\n};\r\n\r\nconst _isComplexKey = keyCodes => ({ value }) => {\r\n  return (keyCodes[value] || {}).params;\r\n};\r\n\r\nconst editForm = keyCodes => {\r\n  const formatLabel = makeFormatLabel(keyCodes);\r\n  const isComplexKey = _isComplexKey(keyCodes);\r\n\r\n  class EditForm extends PureComponent {\r\n    state = {\r\n      key: {},\r\n      params: {}\r\n    };\r\n\r\n    static defaultProps = {\r\n      open: false,\r\n      info: {}\r\n    };\r\n\r\n    static propTypes = {\r\n      open: PropTypes.bool,\r\n      info: PropTypes.object,\r\n      modifierOptions: PropTypes.arrayOf(PropTypes.object).isRequired\r\n    };\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.onsSubmit = this.onsSubmit.bind(this);\r\n      this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    resetState() {\r\n      this.setState({ key: {}, params: {} });\r\n    }\r\n    onsSubmit() {\r\n      const { key, params } = this.state;\r\n      const label = formatLabel(key, params);\r\n      this.props.onClose({\r\n        key: { ...key, label },\r\n        ...this.props.info,\r\n        params: this.state.params\r\n      });\r\n      this.resetState();\r\n    }\r\n    onChange(key) {\r\n      this.setState({ key });\r\n    }\r\n    onParamsChange = this.onParamsChange.bind(this);\r\n    onParamsChange(params) {\r\n      this.setState({ params });\r\n    }\r\n    render() {\r\n      const { open, keyOptions, classes, modifierOptions } = this.props;\r\n      const { key } = this.state;\r\n      return (\r\n        <Dialog\r\n          open={open}\r\n          onClose={this.onsSubmit}\r\n          classes={classes}\r\n          text={\"Keycode:\"}\r\n          actions={\r\n            <Button onClick={this.onsSubmit} color=\"primary\">\r\n              Save\r\n            </Button>\r\n          }\r\n        >\r\n          <Select options={keyOptions} onChange={this.onChange} autoFocus />\r\n          {isComplexKey(key) && (\r\n            <Select\r\n              options={modifierOptions}\r\n              onChange={this.onParamsChange}\r\n              autoFocus\r\n            />\r\n          )}\r\n        </Dialog>\r\n      );\r\n    }\r\n  }\r\n\r\n  return style(EditForm);\r\n};\r\n\r\nexport default editForm;\r\n","import EditForm from \"./EditForm.js\";\nexport default EditForm;\n","import React, { PureComponent } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  paper: {\n    minWidth: \"50%\",\n    minHeight: \"50%\",\n    maxWidth: \"70%\"\n  },\n  DialogContent: {\n    width: \"100%\"\n  },\n  textArea: {\n    width: \"1em\",\n    height: \"1em\",\n    backgroundColor: \"tranpsarent\",\n    position: \"fixed\",\n    top: \"-1em\",\n    left: \"-1em\",\n    display: \"hidden\"\n  },\n  codeWrapper: {\n    backgroundColor: \"rgb(244, 244, 244)\",\n    border: \"1px solid grey\",\n    borderRadius: \"6px\",\n    padding: \"6px\"\n  }\n});\n\nclass ExportDialog extends PureComponent {\n  static defaultProps = {\n    open: false,\n    info: {},\n    onCopySuccess: (...args) => console.log(args)\n  };\n\n  static propTypes = {\n    open: PropTypes.bool,\n    text: PropTypes.string,\n    close: PropTypes.func,\n    onCopySuccess: PropTypes.func\n  };\n\n  state = {\n    snackOpen: false,\n    snackMessage: \"\"\n  };\n\n  textArea = React.createRef();\n\n  onSnackClose() {\n    this.setState({ snackOpen: false });\n  }\n\n  onSnackClose = this.onSnackClose.bind(this);\n\n  openSnack(message) {\n    this.setState({\n      snackOpen: true,\n      snackMessage: message\n    });\n  }\n\n  onEnter = () => {\n    const textArea = this.textArea.current;\n    try {\n      textArea.focus();\n      textArea.select();\n      document.execCommand(\"copy\");\n    } catch (err) {\n      console.error(\"Error copying to the clipboard\");\n    }\n    this.props.onCopySuccess(\"Copied to the clipboard\");\n    this.openSnack(\"Copied to the clipboard!\");\n  };\n\n  render() {\n    const { open, close, classes, text } = this.props;\n    return (\n      <Dialog\n        open={open}\n        onClose={close}\n        onEntered={this.onEnter}\n        aria-labelledby=\"edit-key\"\n        classes={{ paper: classes.paper }}\n      >\n        <DialogContent classes={{ root: classes.DialogContent }}>\n          <DialogContentText>Generated layout:</DialogContentText>\n          <pre className={classes.codeWrapper}>\n            <code>{text}</code>\n          </pre>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={close} color=\"primary\">\n            CLOSE\n          </Button>\n        </DialogActions>\n        <textarea\n          className={classes.textArea}\n          ref={this.textArea}\n          value={text}\n          readOnly\n        />\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          }}\n          open={this.state.snackOpen}\n          autoHideDuration={6000}\n          onClose={this.onSnackClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">{this.state.snackMessage}</span>}\n        />\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(styles)(ExportDialog);\n","import ExportDialog from \"./ExportDialog\";\nexport default ExportDialog;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/add\";\r\n\r\nfunction TabContainer(props) {\r\n  return (\r\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    // flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  tabs: {\r\n    flexGrow: 1\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n  }\r\n});\r\n\r\nconst handleChange = cb => (event, value) => {\r\n  cb(value);\r\n};\r\n\r\nfunction ScrollableTabs(props) {\r\n  const { current, tabs, classes, onChange, onAdd } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"static\"\r\n        color=\"default\"\r\n        classes={{ root: classes.header }}\r\n      >\r\n        <Tabs\r\n          value={current}\r\n          onChange={handleChange(onChange)}\r\n          classes={{ root: classes.tabs }}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          scrollable\r\n          scrollButtons=\"auto\"\r\n        >\r\n          {tabs.map((tab, idx) => (\r\n            <Tab label={tab.label} key={idx} />\r\n          ))}\r\n        </Tabs>\r\n        <IconButton\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"Menu\"\r\n          onClick={onAdd}\r\n        >\r\n          <AddIcon />\r\n        </IconButton>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nScrollableTabs.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  current: PropTypes.number.isRequired,\r\n  onAdd: PropTypes.func\r\n};\r\n\r\nScrollableTabs.defaultProps = {\r\n  tabs: []\r\n};\r\n\r\nexport default withStyles(styles)(ScrollableTabs);\r\n","import Tabs from \"./Tabs\";\nexport default Tabs;\n","import React, { PureComponent } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport Dialog from \"../Dialog\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  paper: {\r\n    minWidth: \"80%\"\r\n  },\r\n  DialogContent: {}\r\n};\r\n\r\nconst style = withStyles(styles);\r\n\r\nclass Import extends PureComponent {\r\n  state = {\r\n    text: \"\"\r\n  };\r\n\r\n  static defaultProps = {\r\n    open: false\r\n  };\r\n\r\n  static propTypes = {\r\n    open: PropTypes.bool,\r\n    onSubmit: PropTypes.func,\r\n    onClose: PropTypes.func.isRequired\r\n  };\r\n\r\n  resetState() {\r\n    this.setState({ text: \"\" });\r\n  }\r\n\r\n  onChange = this.onChange.bind(this);\r\n  onChange({ target: { value } }) {\r\n    this.setState({ text: value });\r\n  }\r\n\r\n  onSubmit = this.onSubmit.bind(this);\r\n  onSubmit() {\r\n    this.props.onSubmit(this.state.text);\r\n    this.resetState();\r\n    this.props.onClose();\r\n  }\r\n\r\n  render() {\r\n    const { open, onClose, classes } = this.props;\r\n    const { text } = this.state;\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        onClose={onClose}\r\n        classes={classes}\r\n        title=\"Layout import\"\r\n        text={\"Paste the layout here:\"}\r\n        actions={\r\n          <Button onClick={this.onSubmit} color=\"primary\">\r\n            Import\r\n          </Button>\r\n        }\r\n      >\r\n        <TextField\r\n          id=\"import-layout-paste\"\r\n          label=\"your layout\"\r\n          multiline\r\n          // rowsMax=\"4\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n          value={text}\r\n          onChange={this.onChange}\r\n        />\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default style(Import);\r\n","import ImportDialog from \"./ImportDialog\";\r\nexport default ImportDialog;\r\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Helmet from \"react-helmet\";\n\nimport Keyboard from \"../components/Keyboard\";\nimport Actions from \"../components/Keyboard/Actions\";\nimport Layout from \"../components/Keyboard/Layout\";\nimport editKey from \"../components/EditForm\";\nimport ExportDialog from \"../components/ExportDialog\";\nimport Tabs from \"../components/Tabs\";\n\nimport { actions as keyboardActions } from \"../modules/keyboard/reducer\";\nimport {\n  selectKeyOptions,\n  selectModifierOptions,\n  keyCodes\n} from \"../modules/keyboard/keyDefinitions\";\nimport { actions as uiActions } from \"../modules/ui\";\nimport ImportDialog from \"../components/ImportDialog\";\n\nconst EditForm = editKey(keyCodes);\n/**\n * creates an array formatted for the tabs component\n */\nconst makeTabs = tabsCount => {\n  const tabs = [];\n  while (tabsCount--) tabs.push({ label: \"Layer \" + tabsCount });\n  return tabs.reverse();\n};\n\nconst mapStateToProps = state => ({\n  ...state.keyboard,\n  ...state.ui,\n  keys: state.keyboard.keys[state.keyboard.activeLayer],\n  tabs: makeTabs(state.keyboard.layersCount)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  ...bindActionCreators(keyboardActions, dispatch),\n  ui: bindActionCreators(uiActions, dispatch)\n});\n\nexport class KeyboardPage extends Component {\n  static propTypes = {\n    prop: PropTypes.string\n  };\n\n  render() {\n    const {\n      editKey,\n      layout,\n      keys,\n      exportLayout,\n      editing,\n      editingId,\n      exportIsOpen,\n      exportClose,\n      importLayout,\n      exported,\n      tabs,\n      activeLayer,\n      selectLayer,\n      createLayer,\n      importDialogOpen,\n      ui,\n      setKey\n    } = this.props;\n    return (\n      <Fragment>\n        <Helmet>\n          {/* General tags */}\n          <title>Ergodox layout editor</title>\n          <meta name=\"description\" content=\"Configure your ergodox layouts\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n          <html lang=\"en\" />\n        </Helmet>\n        <Layout\n          top={\n            <Tabs\n              tabs={tabs}\n              current={activeLayer}\n              onChange={selectLayer}\n              onAdd={createLayer}\n            />\n          }\n          bottom={\n            <Actions\n              actions={[\n                { method: exportLayout, label: \"Export\" },\n                { method: ui.openImport, label: \"Import\" }\n              ]}\n            />\n          }\n        >\n          <Keyboard\n            onKeySelect={editKey}\n            layout={layout.description}\n            split={layout.split}\n            keysData={keys}\n          />\n        </Layout>\n        <EditForm\n          open={editing}\n          onClose={setKey}\n          info={{ id: editingId }}\n          keyOptions={selectKeyOptions}\n          modifierOptions={selectModifierOptions}\n        />\n        <ExportDialog open={exportIsOpen} close={exportClose} text={exported} />\n        <ImportDialog\n          open={importDialogOpen}\n          onClose={ui.closeImport}\n          onSubmit={importLayout}\n        />\n      </Fragment>\n    );\n  }\n}\n\nconst KeyboardPageConnected = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(KeyboardPage);\n\nexport default () => <KeyboardPageConnected />;\n"],"sourceRoot":""}